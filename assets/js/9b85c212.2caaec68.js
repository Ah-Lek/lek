"use strict";(self.webpackChunkahlek=self.webpackChunkahlek||[]).push([[3949],{9133:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"tutorial-doc.md/gstreamer/gstreamer-streaming-tests","title":"6. GStreamer Streaming Tests","description":"Perform streaming tests first on PC/Ubuntu 22.04, then on RZ/G2L with hardware-specific encoder/decoder adjustments.","source":"@site/docs/tutorial-doc.md/gstreamer/gstreamer-streaming-tests.md","sourceDirName":"tutorial-doc.md/gstreamer","slug":"/tutorial-doc.md/gstreamer/gstreamer-streaming-tests","permalink":"/lek/docs/tutorial-doc.md/gstreamer/gstreamer-streaming-tests","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"practicalSidebar","previous":{"title":"5. Editing Recipes and Recompiling Yocto Project","permalink":"/lek/docs/tutorial-doc.md/gstreamer/editing-rcompiling-yocto-project"},"next":{"title":"7. Displaying the Network Streaming","permalink":"/lek/docs/tutorial-doc.md/gstreamer/displaying-the-network-streaming"}}');var r=n(4848),i=n(8453);const a={sidebar_position:6},o="6. GStreamer Streaming Tests",d={},c=[{value:"6.1 Basic Test:",id:"61-basic-test",level:2},{value:"6.2 Streaming Test:",id:"62-streaming-test",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"6-gstreamer-streaming-tests",children:"6. GStreamer Streaming Tests"})}),"\n",(0,r.jsx)(t.p,{children:"Perform streaming tests first on PC/Ubuntu 22.04, then on RZ/G2L with hardware-specific encoder/decoder adjustments."}),"\n",(0,r.jsx)(t.h2,{id:"61-basic-test",children:"6.1 Basic Test:"}),"\n",(0,r.jsx)(t.p,{children:"First, we can take a look at the original video test source,"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"gst-launch-1.0 videotestsrc ! autovideosink\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"alt text",src:n(7851).A+"",width:"1407",height:"807"})}),"\n",(0,r.jsx)(t.p,{children:"We then perform a simple test to make sure equirectangular filter work properly. Before that, please make sure the X,Y Maps are exist in the folder."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"gst-launch-1.0 videotestsrc ! video/x-raw,width=1920,height=1080 ! videoconvert ! equirectangular ! videoconvert ! autovideosink\n"})}),"\n",(0,r.jsx)(t.p,{children:"The output screen is as below,"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"alt text",src:n(3026).A+"",width:"1407",height:"807"})}),"\n",(0,r.jsx)(t.h2,{id:"62-streaming-test",children:"6.2 Streaming Test:"}),"\n",(0,r.jsx)(t.p,{children:"We prepare to do a streaming test from RZ/G2L to PC,"}),"\n",(0,r.jsx)(t.p,{children:"First, open a terminal on Ubuntu 22.04, wait for receiving h.264 stream from RZ/G2L."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"gst-launch-1.0 udpsrc port=5000 ! application/x-rtp,media=video,clock-rate=90000,encoding-name=H264,payload=96 ! rtph264depay ! avdec_h264 ! autovideosink\n"})}),"\n",(0,r.jsx)(t.p,{children:"Below various test scripts are outlined for video streaming with increasing complexity, including decompression, processing, and compression steps. You can use scripts and data under /test_env folder for test"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"mp4 video file > streaming"}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Please change the ",(0,r.jsx)(t.strong,{children:"IP address"})," and ",(0,r.jsx)(t.strong,{children:"file name"})," in the .sh script in the following,"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"gst-launch-1.0 -e filesrc location=./endo01.mp4 ! qtdemux ! queue ! \\\nh264parse ! video/x-h264, stream-format=avc,alignment=au ! rtph264pay pt=96 name=pay0 \\\nconfig-interval=3 mtu=6000 ! udpsink host=192.168.103.136 port=5000\n"})}),"\n",(0,r.jsx)(t.p,{children:"The result is as below,"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"alt text",src:n(7641).A+"",width:"480",height:"360"})}),"\n",(0,r.jsxs)(t.ol,{start:"2",children:["\n",(0,r.jsx)(t.li,{children:"mp4 video decompression > compression > streaming"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Two important Gstreamer elements used on Renesas RZ/G2L h.264 decoder: omxh264dec h.264 encoder: omxh264enc"}),"\n",(0,r.jsx)(t.p,{children:"Please change the IP address and file name in the .sh script in the following,"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"gst-launch-1.0 -e filesrc location=./endo01.mp4 ! qtdemux ! queue ! \\\nh264parse ! omxh264dec ! omxh264enc ! rtph264pay config-interval=10 ! udpsink host=192.168.103.136 port=5000\n"})}),"\n",(0,r.jsxs)(t.ol,{start:"3",children:["\n",(0,r.jsx)(t.li,{children:"mp4 video decompression > image processing ( equirectangular ) > compression > streaming"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Please change the IP address and file name in the .sh script in the following,"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"h264parse ! omxh264dec ! videoconvert ! equirectangular ! videoconvert ! omxh264enc ! \nrtph264pay config-interval=10 ! udpsink host=192.168.0.105 port=5000h264parse ! \nomxh264dec ! videoconvert ! equirectangular ! videoconvert ! omxh264enc ! rtph264pay \nconfig-interval=10 ! udpsink host=192.168.0.105 port=5000\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"alt text",src:n(9520).A+"",width:"480",height:"360"})}),"\n",(0,r.jsx)(t.p,{children:"TIP\nSince the execution speed is slower, some frames could be droped during the playback.\nA longer mp4 test file would lead to better result."}),"\n",(0,r.jsxs)(t.ol,{start:"4",children:["\n",(0,r.jsx)(t.li,{children:"mp4 video decompression > image processing ( equirectangular) > display"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"This test is simpler than the previous one. We can use it to compare the speed."}),"\n",(0,r.jsx)(t.p,{children:"Please change the IP address and file name in the .sh script in the following,"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"gst-launch-1.0 -e filesrc location=./endo01.mp4 ! qtdemux ! queue ! \\\nh264parse ! omxh264dec ! videoconvert ! equirectangular ! videoconvert !\n autovideosink\n"})}),"\n",(0,r.jsx)(t.p,{children:"Result output:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"alt text",src:n(615).A+"",width:"480",height:"360"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},7851:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/image-24-dc18b06b22d3b57965e19ebd2a6008af.png"},3026:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/image-25-bbaa57eddf77ca376622dd958e1c9fe0.png"},7641:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/image-26-7958437f51a356757caa23ff11704889.png"},9520:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/image-27-e6b00d7d95da70ed1a1b51b033800d2f.png"},615:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/image-28-f292fc9bd1a9717462adb0a65145fe6e.png"},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(6540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);