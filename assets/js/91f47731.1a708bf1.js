"use strict";(self.webpackChunkahlek=self.webpackChunkahlek||[]).push([[6929],{2539:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"tutorial-doc.md/gstreamer/developing-the-project-on-pc","title":"3. Developing the gst-plugins-bad-dev Project on PC","description":"GStreamer is a pipeline-based multimedia framework that links together a wide variety of media processing systems to complete complex workflows. For instance, GStreamer can be used to build a system that reads files in one format, processes them, and exports them in another. The formats and processes can be changed in a plug and play fashion.","source":"@site/docs/tutorial-doc.md/gstreamer/developing-the-project-on-pc.md","sourceDirName":"tutorial-doc.md/gstreamer","slug":"/tutorial-doc.md/gstreamer/developing-the-project-on-pc","permalink":"/lek/docs/tutorial-doc.md/gstreamer/developing-the-project-on-pc","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"practicalSidebar","previous":{"title":"2. Generating the Remap Mapping Files","permalink":"/lek/docs/tutorial-doc.md/gstreamer/generating-the-remap-mapping-files"},"next":{"title":"4. Preparing gst-plugins-bad Project for Yocto Compilation","permalink":"/lek/docs/tutorial-doc.md/gstreamer/preparing-project-for-yocto"}}');var s=t(4848),r=t(8453);const o={sidebar_position:3},l="3. Developing the gst-plugins-bad-dev Project on PC",a={},d=[{value:"3.1 Install OpenCV",id:"31-install-opencv",level:2},{value:"3.2 Install libmoildev.so",id:"32-install-libmoildevso",level:2},{value:"3.3 Install GStreamer",id:"33-install-gstreamer",level:2},{value:"3.4 Basic Tutorials : Hello World!!",id:"34-basic-tutorials--hello-world",level:2},{value:"3.5 Command Line Tools",id:"35-command-line-tools",level:2},{value:"3.6 Project Download",id:"36-project-download",level:2},{value:"3.7 Install Meson",id:"37-install-meson",level:2},{value:"3.8 Start Testing",id:"38-start-testing",level:2},{value:"3.9 USB Camera",id:"39-usb-camera",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"3-developing-the-gst-plugins-bad-dev-project-on-pc",children:["3. Developing the ",(0,s.jsx)(n.code,{children:"gst-plugins-bad-dev"})," Project on PC"]})}),"\n",(0,s.jsxs)(n.p,{children:["GStreamer is a ",(0,s.jsx)(n.strong,{children:"pipeline-based multimedia framework"})," that links together a wide variety of media processing systems to complete complex workflows. For instance, GStreamer can be used to build a system that reads files in one format, processes them, and exports them in another. The formats and processes can be changed in a plug and play fashion."]}),"\n",(0,s.jsx)(n.p,{children:"GStreamer is an extremely powerful and versatile framework for creating streaming media applications. However, writing new plugins is not always easy."}),"\n",(0,s.jsx)(n.p,{children:"The below is how GStreamer elements linked as a pipeline."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:t(1247).A+"",width:"1000",height:"350"})}),"\n",(0,s.jsx)(n.h2,{id:"31-install-opencv",children:"3.1 Install OpenCV"}),"\n",(0,s.jsx)(n.p,{children:"We will build the gst-plugins-bad-dev project, please install OpenCV first, the installation command is as below,"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo apt install libopencv-dev python3-opencv\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:t(2230).A+"",width:"1115",height:"657"})}),"\n",(0,s.jsx)(n.h2,{id:"32-install-libmoildevso",children:"3.2 Install libmoildev.so"}),"\n",(0,s.jsx)(n.p,{children:"Please follow the instructions on the Github repository, install it on our x86_64 platform."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/yourskc/moildev_install",children:"https://github.com/yourskc/moildev_install"})}),"\n",(0,s.jsx)(n.h2,{id:"33-install-gstreamer",children:"3.3 Install GStreamer"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://gstreamer.freedesktop.org/documentation/installing/index.html?gi-language=c",children:"https://gstreamer.freedesktop.org/documentation/installing/index.html?gi-language=c"})}),"\n",(0,s.jsx)(n.p,{children:"To completely install GStreamer on Ubuntu 22.04, use the commands below,"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio\n"})}),"\n",(0,s.jsx)(n.h2,{id:"34-basic-tutorials--hello-world",children:"3.4 Basic Tutorials : Hello World!!"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://gstreamer.freedesktop.org/documentation/tutorials/basic/hello-world.html?gi-language=c",children:"https://gstreamer.freedesktop.org/documentation/tutorials/basic/hello-world.html?gi-language=c"})}),"\n",(0,s.jsx)(n.p,{children:"Compile the above with the command below,"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gcc basic-tutorial-1.c -o basic-tutorial-1 `pkg-config --cflags --libs gstreamer-1.0`\n"})}),"\n",(0,s.jsx)(n.h2,{id:"35-command-line-tools",children:"3.5 Command Line Tools"}),"\n",(0,s.jsx)(n.p,{children:"We will use the command line tools gst-inspect-1.0 and gst-launch-1.0 most of the time for our test."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["This is the Linux man page for the ",(0,s.jsx)(n.code,{children:"gst-inspect-1.0"})," tool."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["gst-inspect-1.0\n",(0,s.jsx)(n.a,{href:"https://gstreamer.freedesktop.org/documentation/tools/gst-inspect.html?gi-language=c#synopsis",children:"https://gstreamer.freedesktop.org/documentation/tools/gst-inspect.html?gi-language=c#"})]}),"\n",(0,s.jsx)(n.p,{children:"The below commands will show the information includes the source module, plugin and element,"}),"\n",(0,s.jsx)(n.p,{children:"Examples:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-inspect-1.0 opencv\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-inspect-1.0 geometrictransform\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:t(5305).A+"",width:"925",height:"629"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-inspect-1.0 circle\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:t(8400).A+"",width:"886",height:"621"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["This content comes mostly from the Linux man page for the ",(0,s.jsx)(n.code,{children:"gst-launch-1.0"})," tool."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["gst-launch-1.0\n",(0,s.jsx)(n.a,{href:"https://gstreamer.freedesktop.org/documentation/tools/gst-launch.html?gi-language=c#",children:"https://gstreamer.freedesktop.org/documentation/tools/gst-launch.html?gi-language=c#"})]}),"\n",(0,s.jsx)(n.p,{children:"The below commands will show the information includes the source module, plugin and element,"}),"\n",(0,s.jsx)(n.p,{children:"Let's Try,"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 videotestsrc ! autovideosink"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 videotestsrc pattern=0 ! autovideosink"})}),"\n",(0,s.jsx)(n.p,{children:"where pattern = 0 ..25"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 videotestsrc ! video/x-raw, width=1920, height=1080 ! autovideosink"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 videotestsrc ! video/x-raw, width=1920, height=1080 ! videoconvert ! circle ! videoconvert ! autovideosink"})}),"\n",(0,s.jsx)(n.p,{children:"We already have a MOIL Equirectangular GStreamer element, we hope to use it to link to more applications in the future."}),"\n",(0,s.jsx)(n.h2,{id:"36-project-download",children:"3.6 Project Download"}),"\n",(0,s.jsx)(n.p,{children:"The project mentioned in this section we'll used in the Yocto project building. However, this one is based on a newer Gstreamer version, and is fully compatible with our developing environment Ubuntu 22.04. We can add or modify programs then verify the functionality on our system."}),"\n",(0,s.jsx)(n.p,{children:"Download our modified version project:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/yourskc/gst-plugins-bad-dev",children:"https://github.com/yourskc/gst-plugins-bad-dev"})}),"\n",(0,s.jsx)(n.p,{children:"This project includes a new element named equirectangular as part of the gst-plugins-bad geometric transform plugin. It contains GStreamer code units, build instructions, and test commands. You can clone the project or download the zip file."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:t(8251).A+"",width:"1282",height:"834"})}),"\n",(0,s.jsx)(n.h2,{id:"37-install-meson",children:"3.7 Install Meson"}),"\n",(0,s.jsx)(n.p,{children:"Install the Meson build system:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://mesonbuild.com/Quick-guide.html",children:"https://mesonbuild.com/Quick-guide.html"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo apt-get install python3 python3-pip python3-setuptools \\\npython3-wheel ninja-build\n\npip3 install --user meson\n"})}),"\n",(0,s.jsx)(n.p,{children:"Build"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"meson build\nninja -C build\n"})}),"\n",(0,s.jsx)(n.p,{children:"Verify the creation of .so files in:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"<work_dir>/build/gst/geometrictransform\n"})}),"\n",(0,s.jsx)(n.p,{children:"Install the library locally for verification:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo cp ./build/gst/geometrictransform/libgstgeometrictransform.so /usr/lib/x86_64-linux-gnu/gstreamer-1.0\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then copy the .so file to your system folder,"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo cp libgstgeometrictransform.so /usr/lib/x86_64-linux-gnu/gstreamer-1.0\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Check with ",(0,s.jsx)(n.code,{children:"gst-inspect-1.0"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-inspect-1.0 geometrictransform\n"})}),"\n",(0,s.jsx)(n.p,{children:"and"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-inspect-1.0 equirectangular\n"})}),"\n",(0,s.jsx)(n.p,{children:"Expected output:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:t(7122).A+"",width:"1172",height:"768"})}),"\n",(0,s.jsx)(n.h2,{id:"38-start-testing",children:"3.8 Start Testing"}),"\n",(0,s.jsx)(n.p,{children:"Basic test with video test source:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cd test_env\ngst-launch-1.0 videotestsrc ! video/x-raw,width=1920,height=1080 ! videoconvert ! equirectangular ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:t(7717).A+"",width:"1536",height:"874"})}),"\n",(0,s.jsx)(n.p,{children:"To test with mp4 video files, use the example below:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 playbin uri=file://home/skc/gst-work/gst-plugins-bad-dev/test_env/endo01.mp4 video-sink='videoconvert ! equirectangular ! videoconvert ! autovideosink'\n"})}),"\n",(0,s.jsx)(n.p,{children:"There some .jpg image files and .mp4 video files under /test_env folder. Change the data folder location in the below command according to your actual situation."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 playbin uri=file:///home/skc/gst-work/gst-plugins-bad-dev/test_env/endo01.mp4 video-sink='videoconvert ! equirectangular ! videoconvert ! autovideosink'\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:t(4652).A+"",width:"1850",height:"1053"})}),"\n",(0,s.jsx)(n.p,{children:"Another test is as below,"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 filesrc location=endo01.mp4 ! qtdemux ! queue ! avdec_h264 ! videoconvert ! equirectangular ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(n.p,{children:"Next, we would test network streaming. Open a Terminal window as udp receiver first"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 -v udpsrc uri=udp://127.0.0.1:5000 ! application/x-rtp, media=video, payload=96, encoding-name=H264 ! rtph264depay ! avdec_h264 ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(n.p,{children:"The below is the waiting for the incoming stream"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:t(8846).A+"",width:"1186",height:"797"})}),"\n",(0,s.jsx)(n.p,{children:"First, we use a very simple video test source,"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 videotestsrc ! video/x-raw, width=1920, height=1080 ! videoconvert ! equirectangular ! videoconvert ! x264enc ! rtph264pay config-interval=10 ! udpsink host=127.0.0.1 port=5000\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then we test a still image source,"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 filesrc location=image1920.jpg ! decodebin ! imagefreeze ! videoscale ! video/x-raw,width=1920,height=1080 ! videoconvert ! equirectangular ! videoconvert ! x264enc ! rtph264pay config-interval=10 ! udpsink host=localhost port=5000\n"})}),"\n",(0,s.jsx)(n.h2,{id:"39-usb-camera",children:"3.9 USB Camera"}),"\n",(0,s.jsx)(n.p,{children:'We connect our PC with an USB camera, and replace the video source with "v4l2src device=/dev/video0" in the command.'}),"\n",(0,s.jsx)(n.p,{children:"Before you run the video, please make sure you have install and you can get the information of the device."}),"\n",(0,s.jsx)(n.p,{children:"Installation :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo apt-get install v4l-utils\n"})}),"\n",(0,s.jsx)(n.p,{children:"List all camera devices"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"v4l2-ctl --list-devices\n"})}),"\n",(0,s.jsx)(n.p,{children:"Display driver information"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"v4l2-ctl -d /dev/video0 -D\n"})}),"\n",(0,s.jsx)(n.p,{children:"Get camera supported image format"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"v4l2-ctl -d /dev/video0 --list-formats\n\nv4l2-ctl -d /dev/video0 --list-formats-ext\n"})}),"\n",(0,s.jsx)(n.p,{children:"If you cannect with a normal USB camera, the result screen will be like the below,"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 v4l2src device=/dev/video0 ! videoscale ! video/x-raw, width=1920, height=1080 ! videoconvert ! equirectangular ! videoconvert ! x264enc ! rtph264pay config-interval=10 ! udpsink host=127.0.0.1 port=5000\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:t(1863).A+"",width:"1536",height:"874"})}),"\n",(0,s.jsx)(n.p,{children:"The flow of streaming mp4 file is,"}),"\n",(0,s.jsx)(n.p,{children:"Decompression > Transformation > Compression > Streamering"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"gst-launch-1.0 filesrc location=endo01.mp4 ! qtdemux ! queue ! avdec_h264 ! videoconvert ! equirectangular ! videoconvert ! x264enc ! rtph264pay config-interval=10 ! udpsink host=127.0.0.1 port=5000 -v\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8846:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-10-71546492f9e4074836446455ea474016.png"},1863:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-11-e74a380ce80837bf99f2ff3cf82004ff.png"},1247:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-2-4c052288f4a23c3202ab07f87a1f3522.png"},2230:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-3-d467579a21e1498e2cdee7fcee3130ad.png"},5305:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-4-7ecfc050d22587efad49acdf2044f8ee.png"},8400:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-5-1e1e879f2fd77cad0f9132c338728392.png"},8251:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-6-162bb9b9ce20c0bcc181a0191beccdc3.png"},7122:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-7-b359474dec1c6c2504944ad4d06cca36.png"},7717:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-8-6a4bcdb42da0133331b208d2e8f2dbe4.png"},4652:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-9-a7a9abf4f3fcd455bda836d4a984b337.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);