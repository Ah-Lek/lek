"use strict";(self.webpackChunkahlek=self.webpackChunkahlek||[]).push([[6212],{1886:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>h,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"tutorial-doc.md/linux-basic/open-a-terminal","title":"4. Open a Terminal","description":"On a Ubuntu 20.04 system you can find a launcher for the terminal by clicking on the Activities item at the top left of the screen, then typing the first few letters of \u201cterminal\u201d, \u201ccommand\u201d, \u201cprompt\u201d or \u201cshell\u201d. Yes, the developers have set up the launcher with all the most common synonyms, so you should have no problems finding it.","source":"@site/docs/tutorial-doc.md/linux-basic/open-a-terminal.md","sourceDirName":"tutorial-doc.md/linux-basic","slug":"/tutorial-doc.md/linux-basic/open-a-terminal","permalink":"/lek/docs/tutorial-doc.md/linux-basic/open-a-terminal","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"practicalSidebar","previous":{"title":"3. Basic Commands","permalink":"/lek/docs/tutorial-doc.md/linux-basic/basic-command"},"next":{"title":"5. Creating Folders and Files","permalink":"/lek/docs/tutorial-doc.md/linux-basic/creating-folders-and-files"}}');var r=o(4848),i=o(8453);const a={sidebar_position:4},s="4. Open a Terminal",h={},d=[];function c(e){const t={code:"code",h1:"h1",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"4-open-a-terminal",children:"4. Open a Terminal"})}),"\n",(0,r.jsx)(t.p,{children:"On a Ubuntu 20.04 system you can find a launcher for the terminal by clicking on the Activities item at the top left of the screen, then typing the first few letters of \u201cterminal\u201d, \u201ccommand\u201d, \u201cprompt\u201d or \u201cshell\u201d. Yes, the developers have set up the launcher with all the most common synonyms, so you should have no problems finding it."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"alt text",src:o(8917).A+"",width:"800",height:"202"})}),"\n",(0,r.jsx)(t.p,{children:"Other versions of Linux, or other flavours of Ubuntu, will usually have a terminal launcher located in the same place as your other application launchers. It might be hidden away in a submenu or you might have to search for it from within your launcher, but it\u2019s likely to be there somewhere."}),"\n",(0,r.jsxs)(t.p,{children:["If you can\u2019t find a launcher, or if you just want a faster way to bring up the terminal, most Linux systems use the same default keyboard shortcut to start it: ",(0,r.jsx)(t.strong,{children:"Ctrl-Alt-T"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"However you launch your terminal, you should end up with a rather dull looking window with an odd bit of text at the top, much like the image below. Depending on your Linux system the colours may not be the same, and the text will likely say something different, but the general layout of a window with a large (mostly empty) text area should be similar."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"alt text",src:o(3166).A+"",width:"786",height:"342"})}),"\n",(0,r.jsxs)(t.p,{children:["Let\u2019s run our first command. Click the mouse into the window to make sure that\u2019s where your keystrokes will go, then type the following command, ",(0,r.jsx)(t.strong,{children:"all in lower case"}),", before pressing the ",(0,r.jsx)(t.strong,{children:"Enter"})," or ",(0,r.jsx)(t.strong,{children:"Return"})," key to run it."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"pwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"You should see a directory path printed out (probably something like /home/YOUR_USERNAME), then another copy of that odd bit of text."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"alt text",src:o(4503).A+"",width:"497",height:"183"})}),"\n",(0,r.jsx)(t.p,{children:"There are a couple of basics to understand here, before we get into the detail of what the command actually did. First is that when you type a command it appears on the same line as the odd text. That text is there to tell you the computer is ready to accept a command, it\u2019s the computer\u2019s way of prompting you. In fact it\u2019s usually referred to as the prompt, and you might sometimes see instructions that say \u201cbring up a prompt\u201d, \u201copen a command prompt\u201d, \u201cat the bash prompt\u201d or similar. They\u2019re all just different ways of asking you to open a terminal to get to a shell."}),"\n",(0,r.jsx)(t.p,{children:"On the subject of synonyms, another way of looking at the prompt is to say that there\u2019s a line in the terminal into which you type commands. A command line, if you will. Again, if you see mention of \u201ccommand line\u201d, including in the title of this very tutorial, it\u2019s just another way of talking about a shell running in a terminal."}),"\n",(0,r.jsx)(t.p,{children:"The second thing to understand is that when you run a command any output it produces will usually be printed directly in the terminal, then you\u2019ll be shown another prompt once it\u2019s finished. Some commands can output a lot of text, others will operate silently and won\u2019t output anything at all. Don\u2019t be alarmed if you run a command and another prompt immediately appears, as that usually means the command succeeded. If you think back to the slow network connections of our 1970s terminals, those early programmers decided that if everything went okay they may as well save a few precious bytes of data transfer by not saying anything at all."}),"\n",(0,r.jsxs)(t.p,{children:["A sense of location\nNow to the command itself. ",(0,r.jsx)(t.strong,{children:"pwd"})," is an abbreviation of \u2018print working directory\u2019. All it does is print out the shell\u2019s current working directory. But what\u2019s a working directory?"]}),"\n",(0,r.jsx)(t.p,{children:"One important concept to understand is that the shell has a notion of a default location in which any file operations will take place. This is its working directory. If you try to create new files or directories, view existing files, or even delete them, the shell will assume you\u2019re looking for them in the current working directory unless you take steps to specify otherwise. So it\u2019s quite important to keep an idea of what directory the shell is \u201cin\u201d at any given time, after all, deleting files from the wrong directory could be disastrous. If you\u2019re ever in any doubt, the pwd command will tell you exactly what the current working directory is."}),"\n",(0,r.jsxs)(t.p,{children:["You can change the working directory using the ",(0,r.jsx)(t.strong,{children:"cd"})," command, an abbreviation for \u2018change directory\u2019. Try typing the following:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cd /\npwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"Now your working directory is \u201c/\u201d. If you\u2019re coming from a Windows background you\u2019re probably used to each drive having its own letter, with your main hard drive typically being \u201cC:\u201d. Unix-like systems don\u2019t split up the drives like that. Instead they have a single unified file system, and individual drives can be attached (\u201cmounted\u201d) to whatever location in the file system makes most sense. The \u201c/\u201d directory, often referred to as the root directory, is the base of that unified file system. From there everything else branches out to form a tree of directories and subdirectories."}),"\n",(0,r.jsx)(t.p,{children:"From the root directory, the following command will move you into the \u201chome\u201d directory (which is an immediate subdirectory of \u201c/\u201d):"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cd home\npwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"To go up to the parent directory, in this case back to \u201c/\u201d, use the special syntax of two dots (..) when changing directory (note the space between cd and .., unlike in DOS you can\u2019t just type cd.. as one command):"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cd ..\npwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"Typing cd on its own is a quick shortcut to get back to your home directory:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cd\npwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"You can also use .. more than once if you have to move up through multiple levels of parent directories:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cd ../..\npwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"Notice that in the previous example we described a route to take through the directories. The path we used means \u201cstarting from the working directory, move to the parent / from that new location move to the parent again\u201d. So if we wanted to go straight from our home directory to the \u201cetc\u201d directory (which is directly inside the root of the file system), we could use this approach:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cd\npwd\n\ncd ../../etc\npwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"Most of the examples we\u2019ve looked at so far use relative paths. That is, the place you end up at depends on your current working directory. Consider trying to cd into the \u201cetc\u201d folder. If you\u2019re already in the root directory that will work fine:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cd /\npwd\ncd etc\npwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"But what if you\u2019re in your home directory?"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cd\npwd\ncd etc\npwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"You\u2019ll see an error saying \u201cNo such file or directory\u201d before you even get to run the last pwd. Changing directory by specifying the directory name, or using .. will have different effects depending on where you start from. The path only makes sense relative to your working directory."}),"\n",(0,r.jsx)(t.p,{children:"But we have seen two commands that are absolute. No matter what your current working directory is, they\u2019ll have the same effect. The first is when you run cd on its own to go straight to your home directory. The second is when you used cd / to switch to the root directory. In fact any path that starts with a forward slash is an absolute path. You can think of it as saying \u201cswitch to the root directory, then follow the route from there\u201d. That gives us a much easier way to switch to the etc directory, no matter where we currently are in the file system:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cd\npwd\ncd /etc\npwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"It also gives us another way to get back to your home directory, and even to the folders within it. Suppose you want to go straight to your \u201cDesktop\u201d folder from anywhere on the disk (note the upper-case \u201cD\u201d). In the following command you\u2019ll need to replace USERNAME with your own username, the whoami command will remind you of your username, in case you\u2019re not sure:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"whoami\ncd /home/USERNAME/Desktop\npwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"There\u2019s one other handy shortcut which works as an absolute path. As you\u2019ve seen, using \u201c/\u201d at the start of your path means \u201cstarting from the root directory\u201d. Using the tilde character (\u201c~\u201d) at the start of your path similarly means \u201cstarting from my home directory\u201d."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cd ~\npwd\n\ncd ~/Desktop\npwd\n"})}),"\n",(0,r.jsx)(t.p,{children:"Now that odd text in the prompt might make a bit of sense. Have you noticed it changing as you move around the file system? On a Ubuntu system it shows your username, your computer\u2019s network name and the current working directory. But if you\u2019re somewhere inside your home directory, it will use \u201c~\u201d as an abbreviation. Let\u2019s wander around the file system a little, and keep an eye on the prompt as you do so:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cd\ncd /\ncd ~/Desktop\ncd /etc\ncd /var/log\ncd ..\ncd\n"})}),"\n",(0,r.jsx)(t.p,{children:"You must be bored with just moving around the file system by now, but a good understanding of absolute and relative paths will be invaluable as we move on to create some new folders and files!"})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8917:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/image-1-778d8c02771eeac052c28abeede69dd2.png"},3166:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/image-2-9714cfb36b0fc2939a09f58c69c3029a.png"},4503:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/image-3-48b7d9149ea82202a48f41e536317394.png"},8453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>s});var n=o(6540);const r={},i=n.createContext(r);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);